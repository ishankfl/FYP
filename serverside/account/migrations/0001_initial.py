# Generated by Django 5.0.2 on 2024-03-21 19:50

import account.models
import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('services', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='NullPictures',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=account.models.upload_to_empty)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('full_name', models.CharField(default='', max_length=255)),
                ('username', models.CharField(max_length=255, null=True)),
                ('phonenumber', models.CharField(default='', max_length=15)),
                ('city', models.CharField(default='', max_length=15)),
                ('location', models.CharField(blank=True, default='', max_length=15)),
                ('profile', models.ImageField(blank=True, upload_to=account.models.upload_to, verbose_name='profile')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('user_type', models.CharField(choices=[('admin', 'Admin'), ('customer', 'Customer'), ('provider', 'ServiceProvider')], default='customer', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now=True)),
                ('verify_status', models.BooleanField(default=False)),
                ('total_services', models.IntegerField(default=0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='cutomer_user')),
            ],
            options={
                'verbose_name': 'Customer',
            },
        ),
        migrations.CreateModel(
            name='FavoriteProviderr',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_favorit', models.BooleanField(default=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('by_user', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='ByUser', to=settings.AUTH_USER_MODEL)),
                ('to_user', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='ToUser', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('experience', models.CharField(max_length=200)),
                ('certificate', models.FileField(blank=True, upload_to='')),
                ('verification_status', models.BooleanField(default=False, verbose_name='is_verify')),
                ('is_available', models.BooleanField(default=True)),
                ('is_booked', models.BooleanField(default=False)),
                ('total_services', models.IntegerField(default=0)),
                ('services_offered', models.ForeignKey(default=account.models.ServiceProvider.get_default_services_slug, on_delete=django.db.models.deletion.CASCADE, to='services.services')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='provider_user')),
            ],
            options={
                'verbose_name': 'Service Provider',
            },
        ),
        migrations.CreateModel(
            name='FavoriteProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_favorit', models.BooleanField(default=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('by_user', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='FavoriteBy', to=settings.AUTH_USER_MODEL)),
                ('to_user', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='FavoriteTo', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Favorite Provider',
                'verbose_name_plural': 'Favorite Providers',
                'ordering': ['-timestamp'],
                'unique_together': {('by_user', 'to_user')},
            },
        ),
    ]
